@rendermode InteractiveServer

@using Recordings.Shared.DTOs
@using Recordings.UI.Models

@inject Recordings.UI.Services.ApiService ApiService
@inject ILogger<Playlist> Logger

<div class="card">
    <ul class="track-list">
        @foreach (var track in Tracks)
        {
            <li class="xlist-group-item @GetItemClass(track.OrdinalNumber)" @onclick="() => OnSelectTrack(track)">
                @track.OrdinalNumber. @track.Title @FormatDuration(track.Duration)
            </li>
        }
    </ul>
</div>

@code {

    [Parameter]
    public TrackFilter Filter { get; set; } = new TrackFilter();

    // public string Date { get; set; } = "0000-00-00";

    [Parameter]
    public EventCallback<RecordingDto> OnTrackSelected { get; set; }

    private int SelectedIndex { get; set; } = -1;
    private TrackFilter? CurrentFilter { get; set; }

    private List<RecordingDto> Tracks { get; set; } = new List<RecordingDto>();

    protected override async Task OnParametersSetAsync()
    {
        if (CurrentFilter != null && CurrentFilter.Equals(Filter))
        {
            return;
        }

        if (Filter.Type == TrackFilterType.Date && !String.IsNullOrEmpty(Filter.Value))
        {
            Tracks = await ApiService.GetRecordingsByDate(Filter.Value);
            SelectedIndex = -1;
            CurrentFilter = Filter;
        }
        else if (Filter.Type == TrackFilterType.Title && !String.IsNullOrEmpty(Filter.Value))
        {
            Tracks = await ApiService.GetRecordingsByTitle(Filter.Value);
            SelectedIndex = -1;
            CurrentFilter = Filter;
        }
    }

    private async Task OnSelectTrack(RecordingDto track)
    {
        SelectedIndex = track.OrdinalNumber;
        await OnTrackSelected.InvokeAsync(track);
    }

    private string GetItemClass(int index)
    {
        return index == SelectedIndex ? "selected" : String.Empty;
    }

    private string FormatDuration(int durationInseconds)
    {
        var min = durationInseconds / 60;
        var sec = durationInseconds % 60;
        return $"{min}:{sec:D2}";
    }
}
